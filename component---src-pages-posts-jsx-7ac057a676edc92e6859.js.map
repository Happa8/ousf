{"version":3,"sources":["webpack:///./src/components/posts/postcard.jsx","webpack:///./src/pages/posts.jsx","webpack:///./src/components/button.jsx","webpack:///./src/components/card.jsx"],"names":["mediaMobile","mediaQuery","lessThan","Title","styled","div","COLOR","BLACK","Date","span","Wrapper","motion","custom","Link","Container","CardT","Card","PostCard","props","to","linkto","whileHover","scale","whileTap","barShow","titleShow","seemoreShow","date","title","PostsPage","data","posts","location","allMarkdownRemark","edges","META","siteName","property","content","theme","map","node","frontmatter","path","key","id","query","BASE","UI","SHADOW","Dark","SHADOW_B","Light","SHADOW_W","defaultProps","textcolor","PRIMARY","Content","handleColorTypeText","Button","children","bgcolor","handleColorTypeBg","color","Bar","SeeMoreWrapper","LinkT","SubTitle","style","display","subTitle"],"mappings":"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","file":"component---src-pages-posts-jsx-7ac057a676edc92e6859.js","sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\nimport { motion } from \"framer-motion\"\r\nimport mediaQuery from \"styled-media-query\"\r\n\r\nimport Card from \"../card\"\r\n\r\nimport COLOR from \"../../const/color\"\r\n\r\nconst mediaMobile = mediaQuery.lessThan(\"medium\")\r\n\r\nconst Title = styled.div`\r\n  font-family: \"Noto Sans JP\";\r\n  font-weight: 400;\r\n  font-size: 1.3rem;\r\n  padding: 5px 0;\r\n  letter-spacing: 0.3rem;\r\n  line-height: 1.4rem;\r\n  color: ${COLOR.BLACK};\r\n  margin-right: auto;\r\n`\r\n\r\nconst Date = styled.span`\r\n  font-family: \"Roboto\";\r\n  font-weight: 300;\r\n  font-size: 1rem;\r\n  color: ${COLOR.BLACK};\r\n  padding: 5px 0;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Wrapper = styled(motion.custom(Link))`\r\n  text-decoration: none;\r\n  display: block;\r\n`\r\n\r\nconst Container = styled.div`\r\n  width: 80%;\r\n`\r\n\r\nconst CardT = styled(Card)`\r\n  ${mediaMobile`\r\n      margin: 10px 0;\r\n    `}\r\n`\r\n\r\nconst PostCard = props => {\r\n  return (\r\n    <Wrapper\r\n      to={\"/post/\" + props.linkto}\r\n      whileHover={{ scale: 1.05 }}\r\n      whileTap={{ scale: 0.95 }}\r\n    >\r\n      <CardT barShow=\"false\" titleShow=\"false\" seemoreShow=\"false\">\r\n        <Container>\r\n          <Date>{props.date}</Date>\r\n          <Title>{props.title}</Title>\r\n        </Container>\r\n      </CardT>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PostCard\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Helmet from \"react-helmet\"\r\n\r\nimport META from \"../const/meta\"\r\n//import COLOR from \"../const/color\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Card from \"../components/card\"\r\nimport PostCard from \"../components/posts/postcard\"\r\n\r\nconst PostsPage = ({ data, location }) => {\r\n  const posts = data.allMarkdownRemark.edges\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>投稿一覧 | {META.siteName}</title>\r\n        <meta property=\"og:title\" content=\"投稿一覧\" />\r\n      </Helmet>\r\n      <Card\r\n        title=\"投稿一覧\"\r\n        seemoreShow=\"False\"\r\n        theme=\"primary\"\r\n        barShow=\"False\"\r\n      ></Card>\r\n      {posts.map(({ node }) => {\r\n        const title = node.frontmatter.title\r\n        return (\r\n          <PostCard\r\n            title={title}\r\n            linkto={node.frontmatter.path}\r\n            date={node.frontmatter.date}\r\n            key={node.id}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostsPage\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { type: { eq: \"blog\" } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            date(formatString: \"YYYY.MM.DD\")\r\n            title\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { motion } from \"framer-motion\"\r\n\r\nimport COLOR from \"../const/color\"\r\nimport UI from \"../const/ui\"\r\n\r\nconst handleColorTypeText = (theme, textcolor) => {\r\n  switch (theme) {\r\n    case \"primary\":\r\n      return COLOR.BASE\r\n    case \"reverse\":\r\n      return COLOR.BASE\r\n    default:\r\n      return textcolor\r\n  }\r\n}\r\n\r\nconst Wrapper = styled(motion.div)`\r\n  width: auto;\r\n  box-sizing: border-box;\r\n  padding: 10px 20px;\r\n  margin: 5px;\r\n  background-color: ${COLOR.BASE};\r\n  box-shadow: ${UI.SHADOW.Dark} ${COLOR.SHADOW_B},\r\n    ${UI.SHADOW.Light} ${COLOR.SHADOW_W};\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  transition-duration: 150ms;\r\n  &:hover {\r\n    box-shadow: ${UI.SHADOW.Dark} ${COLOR.SHADOW_B},\r\n      ${UI.SHADOW.Light} ${COLOR.SHADOW_W};\r\n    transform: scale(1.05);\r\n    transition-duration: 150ms;\r\n  }\r\n`\r\nWrapper.defaultProps = {\r\n  textcolor: COLOR.PRIMARY,\r\n}\r\n\r\nconst Content = styled.span`\r\n  text-decoration: none;\r\n  font-size: 0.9rem;\r\n  font-family: \"Roboto\", \"Noto Sans JP\";\r\n  color: ${props => handleColorTypeText(props.theme, props.textcolor)};\r\n  font-weight: 300;\r\n  white-space: nowrap;\r\n`\r\nContent.defaultProps = {\r\n  textcolor: COLOR.PRIMARY,\r\n}\r\n\r\nconst Button = props => {\r\n  return (\r\n    <Wrapper whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\r\n      <Content textcolor={props.textcolor} theme={props.theme}>\r\n        {props.children}\r\n      </Content>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport COLOR from \"../const/color\"\r\nimport UI from \"../const/ui\"\r\n\r\nimport Button from \"./button\"\r\n\r\nconst handleColorTypeBg = (theme, bgcolor) => {\r\n  switch (theme) {\r\n    case \"primary\":\r\n      return COLOR.PRIMARY\r\n    case \"reverse\":\r\n      return COLOR.BLACK\r\n    default:\r\n      return bgcolor\r\n  }\r\n}\r\n\r\nconst handleColorTypeText = (theme, textcolor) => {\r\n  switch (theme) {\r\n    case \"primary\":\r\n      return COLOR.BASE\r\n    case \"reverse\":\r\n      return COLOR.BASE\r\n    default:\r\n      return textcolor\r\n  }\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  border-radius: 10px;\r\n  background: ${props => handleColorTypeBg(props.theme, props.bgcolor)};\r\n  box-shadow: ${UI.SHADOW.Dark} ${COLOR.SHADOW_B},\r\n    ${UI.SHADOW.Light} ${COLOR.SHADOW_W};\r\n  width: 90vw;\r\n  max-width: 900px;\r\n  /* min-height: 100px; */\r\n  margin: 40px 0px;\r\n  display: flex;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nWrapper.defaultProps = {\r\n  bgcolor: COLOR.BASE,\r\n}\r\n\r\nconst Title = styled.span`\r\n  font-family: \"Noto Sans JP\";\r\n  color: ${props => handleColorTypeText(props.theme, props.color)};\r\n  font-size: 1.4rem;\r\n  letter-spacing: 0.5rem;\r\n  margin-right: -0.5rem;\r\n  font-weight: 500;\r\n  line-height: 1.7rem;\r\n  text-align: center;\r\n`\r\n\r\nTitle.defaultProps = {\r\n  color: COLOR.BLACK,\r\n}\r\n\r\nconst Bar = styled.div`\r\n  width: 40px;\r\n  height: 2px;\r\n  background-color: ${props => handleColorTypeText(props.theme, props.color)};\r\n  margin: 20px 0;\r\n`\r\n\r\nBar.defaultProps = {\r\n  color: COLOR.BLACK,\r\n}\r\n\r\nconst SeeMoreWrapper = styled.div`\r\n  margin-top: 10px;\r\n  margin-left: auto;\r\n`\r\nconst LinkT = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${COLOR.PRIMARY};\r\n`\r\n\r\nconst SubTitle = styled.span`\r\n  color: ${props => handleColorTypeText(props.theme, props.color)};\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  font-family: \"Roboto, Noto Sans JP\";\r\n  letter-spacing: 0.3rem;\r\n`\r\n\r\nSubTitle.defaultProps = {\r\n  color: COLOR.BLACK,\r\n}\r\n\r\nconst Card = props => {\r\n  return (\r\n    <Wrapper bgcolor={props.bgcolor} theme={props.theme}>\r\n      <Title\r\n        style={{ display: props.titleShow ? \"none\" : \"\" }}\r\n        color={props.textcolor}\r\n        theme={props.theme}\r\n      >\r\n        {props.title}\r\n      </Title>\r\n      <SubTitle style={{ display: props.subTitle ? \"\" : \"none\" }}>\r\n        - {props.subTitle} -\r\n      </SubTitle>\r\n      <Bar\r\n        style={{ display: props.barShow ? \"none\" : \"\" }}\r\n        color={props.textcolor}\r\n        theme={props.theme}\r\n      />\r\n      {props.children}\r\n      <SeeMoreWrapper style={{ display: props.seemoreShow ? \"none\" : \"\" }}>\r\n        <LinkT to={props.linkto}>\r\n          <Button>SEE MORE</Button>\r\n        </LinkT>\r\n      </SeeMoreWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Card\r\n"],"sourceRoot":""}